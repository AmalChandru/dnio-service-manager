swagger: '2.0'
info:
  version: 0.0.1
  title: serviceManager API
host: 'localhost:10003'
basePath: /sm
schemes:
  - http
consumes:
  - multipart/form-data
  - application/json
produces:
  - application/json
  - text/plain
paths:
  /service:
    x-swagger-router-controller: controller
    get:
      description: Retrieve a list of serviceManager
      operationId: serviceManagerList
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: page
          in: query
          type: integer
          description: Page number of the request
        - name: count
          in: query
          type: integer
          description: Number of records per page
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields
        - name: select
          in: query
          type: string
          description: Comma seperated fields to be displayed
        - name: sort
          in: query
          type: string
          description: sort parameter
        - name: draft
          in: query
          type: boolean
          description: Returns draft documents if true
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
    post:
      description: Create a new serviceManager
      operationId: serviceManagerCreate
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: data
          in: body
          description: Payload to create a serviceManager
          schema:
            $ref: '#/definitions/serviceManager_create'
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '500':
          description: Internal server error
  /service/verifyHook:
    x-swagger-router-controller: controller
    get:
      description: Verify hook existence
      operationId: serviceManagerVerifyHook
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: url
          in: query
          type: string
          description: Payload to verify hook
      responses:
        '200':
          description: isVerified true or false
        '400':
          description: Bad parameters
        '500':
          description: Internal server error          
  '/service/{id}':
    x-swagger-router-controller: controller
    get:
      description: Retrieves a serviceManager
      operationId: serviceManagerShow
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields
        - name: select
          in: query
          type: string
          description: Comma seperated fields to be displayed
        - name: draft
          in: query
          type: boolean
          description: return draft document if true  
        - name: id
          in: path
          type: string
          required: true
          description: Id of the object to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
    put:
      description: Updates a serviceManager
      operationId: serviceManagerUpdate
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: data
          in: body
          description: Payload to update a serviceManager
          schema:
            $ref: '#/definitions/serviceManager_update'
        - name: id
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
    delete:
      description: delete a serviceManager
      operationId: serviceManagerDestroy
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation  
        - name: id
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  /service/count:
    x-swagger-router-controller: controller 
    get:
      description: returns the count of services
      operationId: getServiceCount
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields  
      responses:
        '200':
          description: count of services
        '400':
          description: Bad parameters
        '500':
          description: Internal server error
  /service/status/count:
    x-swagger-router-controller: controller 
    get:
      description: returns the count of services by status
      operationId: countByStatus
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields  
      responses:
        '200':
          description: count of services
        '400':
          description: Bad parameters
        '500':
          description: Internal server error
  /service/audit:
    x-swagger-router-controller: controller
    get:
      description: Retrieve the audit logs of services
      operationId: serviceAudit
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation      
        - name: page
          in: query
          type: integer
          description: Page number of the request
        - name: count
          in: query
          type: integer
          description: Number of records per page
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields
        - name: select
          in: query
          type: string
          description: Comma seperated fields to be displayed
        - name: sort
          in: query
          type: string
          description: sort parameter
        - name: search
          in: query
          type: string
          description: String to search across all field
      responses:
        '200':
          description: audit of document
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  /service/audit/count:
    x-swagger-router-controller: controller
    get:
      description: Retrieve the count of audit logs of services
      operationId: serviceAuditCount
      parameters:
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields
      responses:
        '200':
          description: count of audit logs
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error  
  '/{id}/draftDelete':
    x-swagger-router-controller: controller
    delete:
      description: delete the draft of the service
      operationId: serviceManagerDraftDelete
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation  
        - name: id
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  /{id}/purge/all:
    x-swagger-router-controller: controller
    delete:
      description: delete a serviceManager
      operationId: purgeService
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation  
        - name: id
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated 
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  /validateUserDeletion/{app}/{userId}:
    x-swagger-router-controller: controller
    put:
      description: delete a serviceManager
      operationId: validateUserDeletion
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation  
        - name: userId
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated 
        - name: app
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated 
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error   
  /userDeletion/{app}/{userId}:
    x-swagger-router-controller: controller
    put:
      description: delete a serviceManager
      operationId: userDeletion
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation  
        - name: userId
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated 
        - name: app
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated 
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error 
  /{id}/purge/{type}:
    x-swagger-router-controller: controller
    delete:
      description: delete a serviceManager
      operationId: purgeLogsService
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation  
        - name: id
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated
        - name: type
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated 
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error 
  '/service/{id}/swagger':
    x-swagger-router-controller: controller
    get:
      description: Retrieves a swagger doc of entity
      operationId: swaggerDocShow
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields
        - name: select
          in: query
          type: string
          description: Comma seperated fields to be displayed
        - name: id
          in: path
          type: string
          required: true
          description: Id of the entity to be shown
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  '/service/{id}/statusChange':
    x-swagger-router-controller: controller
    put:
      description: change status of entity
      operationId: serviceManagerStatusChange
      parameters:
        - name: id
          in: path
          type: string
          required: true
          description: Id of the entity to be shown
        - name: status
          in: query
          type: string
          description: status
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error  
  '/service/{id}/statusChangeFromMaintenance':
    x-swagger-router-controller: controller
    put:
      description: change status of entity
      operationId: serviceManagerStatusChangeFromMaintenance
      parameters:
        - name: id
          in: path
          type: string
          required: true
          description: Id of the entity to be shown
        - name: status
          in: query
          type: string
          description: status
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error      
  '/service/{id}/checkUnique':
    x-swagger-router-controller: controller
    get:
      description: Retrieves a swagger doc of entity
      operationId: checkUnique
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: fields
          in: query
          type: string
          description: Comma seperated fields to be checked for uniqueness
        - name: id
          in: path
          type: string
          required: true
          description: Id of the entity to be shown
      responses:
        '200':
          description: Map of fields with flag indicating uniqueness
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  '/app/{app}':
    x-swagger-router-controller: controller
    delete:
      description: delete all the services of give app
      operationId: deleteApp
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation  
        - name: app
          in: path
          type: string
          required: true
          description: Id of the app to be deleted
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  '/{app}/service/stop' :
    x-swagger-router-controller: controller
    put:
      description: stops all services of a app
      operationId: stopAllServices
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation  
        - name: app
          in: path
          type: string
          required: true
          description: stop all service
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  '/{app}/service/start' :
    x-swagger-router-controller: controller
    put:
      description: starts all services of a app
      operationId: startAllServices
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation  
        - name: app
          in: path
          type: string
          required: true
          description: start all service
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error  
  /globalSchema:
    x-swagger-router-controller: controller
    get:
      description: Retrieve a list of globalSchema
      operationId: globalSchemaList
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: page
          in: query
          type: integer
          description: Page number of the request
        - name: count
          in: query
          type: integer
          description: Number of records per page
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields
        - name: select
          in: query
          type: string
          description: Comma seperated fields to be displayed
        - name: sort
          in: query
          type: string
          description: sort parameter
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
    post:
      description: Create a new serviceManager
      operationId: globalSchemaCreate
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: data
          in: body
          description: Payload to create a serviceManager
          schema:
            $ref: '#/definitions/globalSchema_create'
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '500':
          description: Internal server error
  '/globalSchema/{id}':
    x-swagger-router-controller: controller
    get:
      description: Retrieves a globalSchema
      operationId: globalSchemaShow
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields
        - name: select
          in: query
          type: string
          description: Comma seperated fields to be displayed
        - name: id
          in: path
          type: string
          required: true
          description: Id of the object to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
    put:
      description: Updates a globalSchema
      operationId: globalSchemaUpdate
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: data
          in: body
          description: Payload to update a serviceManager
          schema:
            $ref: '#/definitions/globalSchema_update'
        - name: id
          in: path
          type: string
          required: true
          description: Id of the globalSchema to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
    delete:
      description: delete a globalSchema
      operationId: globalSchemaDestroy
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: id
          in: path
          type: string
          required: true
          description: Id of the globalSchema to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  /globalSchema/count:
    x-swagger-router-controller: controller 
    get:
      description: returns the count of globalSchemas
      operationId: globalSchemaCount
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields  
      responses:
        '200':
          description: count of services
        '400':
          description: Bad parameters
        '500':
          description: Internal server error        
  /globalSchema/audit:
    x-swagger-router-controller: controller
    get:
      description: Retrieve the audit logs of globalSchema
      operationId: globalSchemaAudit
      parameters:
        - name: page
          in: query
          type: integer
          description: Page number of the request
        - name: count
          in: query
          type: integer
          description: Number of records per page
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields
        - name: select
          in: query
          type: string
          description: Comma seperated fields to be displayed
        - name: sort
          in: query
          type: string
          description: sort parameter
        - name: search
          in: query
          type: string
          description: String to search across all field
      responses:
        '200':
          description: audit of globalSchema document
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  /globalSchema/audit/count:
    x-swagger-router-controller: controller
    get:
      description: Retrieve the count of logs of globalSchema
      operationId: globalSchemaAuditCount
      parameters:
        - name: filter
          in: query
          type: string
          description: Filter records based on certain fields
      responses:
        '200':
          description: count of audit logs
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
  '/{id}/start':
    x-swagger-router-controller: controller
    put:
      description: Start a service with given id
      operationId: startService
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: id
          in: path
          type: string
          required: true
          description: Id of the object to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '500':
          description: Internal server error
  '/{id}/stop':
    x-swagger-router-controller: controller
    put:
      description: stop a service with given id
      operationId: stopService
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: id
          in: path
          type: string
          required: true
          description: Id of the object to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '500':
          description: Internal server error
  '/{id}/deploy':
    x-swagger-router-controller: controller
    put:
      description: deploy a service with given id
      operationId: deployService
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: id
          in: path
          type: string
          required: true
          description: Id of the object to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '500':
          description: Internal server error        
  '/{id}/repair':
    x-swagger-router-controller: controller
    put:
      description: Repair a service with given id
      operationId: repairService
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: id
          in: path
          type: string
          required: true
          description: Id of the object to be updated
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '500':
          description: Internal server error                
  '/{id}/count':
    x-swagger-router-controller: controller
    get:
      description: Returns the count of document in a service
      operationId: vishnuDocumentCount
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: id
          in: path
          type: string
          required: true
          description: Id of the service
      responses:
        '200':
          description: List of the entites
        '404':
          description: No service found   
        '400':
          description: Bad parameters
        '500':
          description: Internal server error
  '/{id}/{app}/idCount':
    x-swagger-router-controller: controller
    get:
      description: Returns the next id counter of document in a service
      operationId: vishnuIdCounter
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: id
          in: path
          type: string
          required: true
          description: Id of the service
        - name: app
          in: path
          type: string
          required: true
          description: app of the service
      responses:
        '200':
          description: List of the entites
        '404':
          description: No service found   
        '400':
          description: Bad parameters
        '500':
          description: Internal server error                 
  '/calendar/enable':
    x-swagger-router-controller: controller
    put:
      description: Enable calendar DS for given app
      operationId: enableCalendar
      parameters:
        - name: authorization
          in: header
          type: string
          description: Name of the app to enable calendar for Time Bound Settings
        - name: data
          in: body
          description: Payload containing app name
          schema:
            type: object
            required:
              - app
            properties:
              app:
                type: string
      responses:
        '200':
          description: Enabling Calendar
        '400':
          description: Bad parameters
        '500':
          description: Internal server error                
  '/calendar/disable':
    x-swagger-router-controller: controller
    put:
      description: Disable calendar DS for given app
      operationId: disableCalendar
      parameters:
        - name: authorization
          in: header
          type: string
          description: Name of the app to disable calendar for Time Bound Settings
        - name: data
          in: body
          description: Payload containing app name
          schema:
            type: object
            required:
              - app
            properties:
              app:
                type: string
      responses:
        '200':
          description: Disabling Calendar
        '400':
          description: Bad parameters
        '500':
          description: Internal server error
  /logs:
    x-swagger-router-controller: controller
    get:
      description: Retrieve the logs
      operationId: logsControllerList
      responses:
        '200':
          description: logs
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error
      parameters:
        - name: page
          in: query
          type: integer
          description: Page number of the request
        - name: count
          in: query
          type: integer
          description: Number of results per page
        - name: filter
          in: query
          type: string
          description: Filter results based on certain fields
        - name: select
          in: query
          type: string
          description: Comma seperated fields to be displayed
        - name: sort
          in: query
          type: string
          description: Sort parameters
  /{id}/lockDocument/count:
    x-swagger-router-controller: controller 
    get:
      description: returns the count of globalSchemas
      operationId: lockDocumentCount
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation 
        - name: id
          in: path
          type: string
          required: true
          description: Id of the serviceManager to be updated
      responses:
        '200':
          description: count of services
        '400':
          description: Bad parameters
        '500':
          description: Internal server error
  /tags:
    x-swagger-router-controller: controller 
    get:
      description: returns the array of tags with start from given string
      operationId: tags
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req. validation
        - name: tag
          in: query
          type: string
          description: Filter results based on certain fields  
      responses:
        '200':
          description: count of services
        '400':
          description: Bad parameters
        '500':
          description: Internal server error    
  /health/live:
    x-swagger-router-controller: controller
    get:
      description: heath 
      operationId: health
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req.validation
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error   
  /health/ready:
    x-swagger-router-controller: controller
    get:
      description: readiness 
      operationId: readiness
      parameters:
        - name: authorization
          in: header
          type: string
          description: The JWT token for req.validation
      responses:
        '200':
          description: List of the entites
        '400':
          description: Bad parameters
        '404':
          description: No records to list with the given parameter set.
        '500':
          description: Internal server error                                                     
definitions:
  serviceManager_create:
    required:
      - name
    properties:
      _id:
        type: string
      name:
        type: string
      description:
        type: [string, 'null'] 
      api:
        type: string
      versionValidity:
        type: object
        properties:
          validityValue: 
            type: [string,number]
          validityType: 
            type: string
      wizard:
        type: [array, 'null']
        items:
          properties:
            name:
              type: string
            fields: 
              type: array
              items:
                type: string   
      definition:
        type: [array, 'null']
        items:
          type: object
      webHooks:
        type: [array, 'null']
        items:
          properties:
            name:
              type: string
            url: 
              type: string
            failMessage:
              type: [string, 'null']  
      preHooks:
        type: [array, 'null']
        items:
          properties:
            name:
              type: string
            url: 
              type: string
            failMessage:
              type: [string, 'null']  
      workflowHooks:
        type: [object, 'null']
        properties:
          posthooks:
            type: [object, 'null']
            properties:
              submit:
                type: [array, 'null']
                items:
                  properties:
                    name:
                      type: string
                    url: 
                      type: string
                    failMessage:
                      type: [string, 'null']
              discard:
                type: [array, 'null']
                items:
                  properties:
                    name:
                      type: string
                    url: 
                      type: string
                    failMessage:
                      type: [string, 'null']  
              approve:
                type: [array, 'null']
                items:
                  properties:
                    name:
                      type: string
                    url: 
                      type: string
                    failMessage:
                      type: [string, 'null']
              reject:
                type: [array, 'null']
                items:
                  properties:
                    name:
                      type: string
                    url: 
                      type: string
                    failMessage:
                      type: [string, 'null']
              rework:
                type: [array, 'null']
                items:
                  properties:
                    name:
                      type: string
                    url: 
                      type: string
                    failMessage:
                      type: [string, 'null']
      tags:
        type: [array, 'null']
        items:
          type: string
      role:
        type: object
  serviceManager_update:
    properties:
      _id:
        type: string
      name:
        type: string
      description:
        type: [string, 'null']  
      collectionName:
        type: string
      port:
        type: number  
      api:
        type: string
      versionValidity:
        type: object
        properties:
          validityValue: 
            type: [string,number]
          validityType: 
            type: string
      definition:
        type: [array, 'null']
        items:
          type: object
      # attributeList:
      #   type: [array]
      webHooks:
        type: [array, 'null']
        items:
          properties:
            name:
              type: string
            url: 
              type: string
            failMessage:
              type: [string, 'null']
      preHooks:
        type: [array, 'null']
        items:
          properties:
            name:
              type: string
            url: 
              type: string
            failMessage:
              type: [string, 'null']                
      workflowHooks:
        type: [object, 'null']
        properties:
          posthooks:
            type: [object, 'null']
            properties:
              submit:
                type: [array, 'null']
                items:
                  properties:
                    name:
                      type: string
                    url: 
                      type: string
                    failMessage:
                      type: [string, 'null']
              discard:
                type: [array, 'null']
                items:
                  properties:
                    name:
                      type: string
                    url: 
                      type: string
                    failMessage:
                      type: [string, 'null']  
              approve:
                type: [array, 'null']
                items:
                  properties:
                    name:
                      type: string
                    url: 
                      type: string
                    failMessage:
                      type: [string, 'null']
              reject:
                type: [array, 'null']
                items:
                  properties:
                    name:
                      type: string
                    url: 
                      type: string
                    failMessage:
                      type: [string, 'null']      
  globalSchema_create:
    required:
      - name
      - app
    properties:
      name:
        type: string
      app:
        type: string  
  globalSchema_update:
    properties:
      name:
        type: [string, 'null']
      app:
        type: string   
  
          